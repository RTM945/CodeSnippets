// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: linker.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerType int32

const (
	ServerType_NONE    ServerType = 0
	ServerType_PHANTOM ServerType = 1
	ServerType_AU      ServerType = 2
)

// Enum value maps for ServerType.
var (
	ServerType_name = map[int32]string{
		0: "NONE",
		1: "PHANTOM",
		2: "AU",
	}
	ServerType_value = map[string]int32{
		"NONE":    0,
		"PHANTOM": 1,
		"AU":      2,
	}
)

func (x ServerType) Enum() *ServerType {
	p := new(ServerType)
	*p = x
	return p
}

func (x ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_linker_proto_enumTypes[0].Descriptor()
}

func (ServerType) Type() protoreflect.EnumType {
	return &file_linker_proto_enumTypes[0]
}

func (x ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerType.Descriptor instead.
func (ServerType) EnumDescriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{0}
}

type SessionError_Code int32

const (
	SessionError_NONE SessionError_Code = 0
	// 白名单开启
	SessionError_OPEN_WHITE_IP SessionError_Code = 8001
	// 黑名单开启
	SessionError_OPEN_BLACK_IP SessionError_Code = 8002
	// 连接数上限
	SessionError_OVER_MAX_SESSIONS SessionError_Code = 8005
	// 频率过快
	SessionError_RATE_LIMIT SessionError_Code = 8006
	// 当前状态不能发送协议到后端服务
	SessionError_CANT_DISPATCH SessionError_Code = 8007
)

// Enum value maps for SessionError_Code.
var (
	SessionError_Code_name = map[int32]string{
		0:    "NONE",
		8001: "OPEN_WHITE_IP",
		8002: "OPEN_BLACK_IP",
		8005: "OVER_MAX_SESSIONS",
		8006: "RATE_LIMIT",
		8007: "CANT_DISPATCH",
	}
	SessionError_Code_value = map[string]int32{
		"NONE":              0,
		"OPEN_WHITE_IP":     8001,
		"OPEN_BLACK_IP":     8002,
		"OVER_MAX_SESSIONS": 8005,
		"RATE_LIMIT":        8006,
		"CANT_DISPATCH":     8007,
	}
)

func (x SessionError_Code) Enum() *SessionError_Code {
	p := new(SessionError_Code)
	*p = x
	return p
}

func (x SessionError_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionError_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_linker_proto_enumTypes[1].Descriptor()
}

func (SessionError_Code) Type() protoreflect.EnumType {
	return &file_linker_proto_enumTypes[1]
}

func (x SessionError_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionError_Code.Descriptor instead.
func (SessionError_Code) EnumDescriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{2, 0}
}

type ServerError_Code int32

const (
	ServerError_NONE ServerError_Code = 0
	// 目标服务器不可达
	ServerError_SERVER_NOT_ACCESSIBLE ServerError_Code = 9001
)

// Enum value maps for ServerError_Code.
var (
	ServerError_Code_name = map[int32]string{
		0:    "NONE",
		9001: "SERVER_NOT_ACCESSIBLE",
	}
	ServerError_Code_value = map[string]int32{
		"NONE":                  0,
		"SERVER_NOT_ACCESSIBLE": 9001,
	}
)

func (x ServerError_Code) Enum() *ServerError_Code {
	p := new(ServerError_Code)
	*p = x
	return p
}

func (x ServerError_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerError_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_linker_proto_enumTypes[2].Descriptor()
}

func (ServerError_Code) Type() protoreflect.EnumType {
	return &file_linker_proto_enumTypes[2]
}

func (x ServerError_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerError_Code.Descriptor instead.
func (ServerError_Code) EnumDescriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{3, 0}
}

type MsgBox struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeId        uint32                 `protobuf:"varint,1,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgBox) Reset() {
	*x = MsgBox{}
	mi := &file_linker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBox) ProtoMessage() {}

func (x *MsgBox) ProtoReflect() protoreflect.Message {
	mi := &file_linker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBox.ProtoReflect.Descriptor instead.
func (*MsgBox) Descriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{0}
}

func (x *MsgBox) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *MsgBox) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Ping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Serial        int32                  `protobuf:"varint,1,opt,name=serial,proto3" json:"serial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_linker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_linker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{1}
}

func (x *Ping) GetSerial() int32 {
	if x != nil {
		return x.Serial
	}
	return 0
}

type SessionError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          uint32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionError) Reset() {
	*x = SessionError{}
	mi := &file_linker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionError) ProtoMessage() {}

func (x *SessionError) ProtoReflect() protoreflect.Message {
	mi := &file_linker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseBySessionError.ProtoReflect.Descriptor instead.
func (*SessionError) Descriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{2}
}

func (x *SessionError) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type ServerError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PvId          uint32                 `protobuf:"varint,2,opt,name=pvId,proto3" json:"pvId,omitempty"`
	Code          uint32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerError) Reset() {
	*x = ServerError{}
	mi := &file_linker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerError) ProtoMessage() {}

func (x *ServerError) ProtoReflect() protoreflect.Message {
	mi := &file_linker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerError.ProtoReflect.Descriptor instead.
func (*ServerError) Descriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{3}
}

func (x *ServerError) GetPvId() uint32 {
	if x != nil {
		return x.PvId
	}
	return 0
}

func (x *ServerError) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type Pong struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Serial        int32                  `protobuf:"varint,1,opt,name=serial,proto3" json:"serial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pong) Reset() {
	*x = Pong{}
	mi := &file_linker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_linker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{4}
}

func (x *Pong) GetSerial() int32 {
	if x != nil {
		return x.Serial
	}
	return 0
}

var File_linker_proto protoreflect.FileDescriptor

const file_linker_proto_rawDesc = "" +
	"\n" +
	"\flinker.proto\x12\x05proto\x1a\fcommon.proto\"?\n" +
	"\x06MsgBox\x12\x16\n" +
	"\x06typeId\x18\x01 \x01(\rR\x06typeId\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload:\x03\xc0>\x03\"#\n" +
	"\x04Ping\x12\x16\n" +
	"\x06serial\x18\x01 \x01(\x05R\x06serial:\x03\xc0>\x04\"\x9e\x01\n" +
	"\fSessionError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\rR\x04code\"u\n" +
	"\x04Code\x12\b\n" +
	"\x04NONE\x10\x00\x12\x12\n" +
	"\rOPEN_WHITE_IP\x10\xc1>\x12\x12\n" +
	"\rOPEN_BLACK_IP\x10\xc2>\x12\x16\n" +
	"\x11OVER_MAX_SESSIONS\x10\xc5>\x12\x0f\n" +
	"\n" +
	"RATE_LIMIT\x10\xc6>\x12\x12\n" +
	"\rCANT_DISPATCH\x10\xc7>:\x03\xc0>\x06\"h\n" +
	"\vServerError\x12\x12\n" +
	"\x04pvId\x18\x02 \x01(\rR\x04pvId\x12\x12\n" +
	"\x04code\x18\x01 \x01(\rR\x04code\",\n" +
	"\x04Code\x12\b\n" +
	"\x04NONE\x10\x00\x12\x1a\n" +
	"\x15SERVER_NOT_ACCESSIBLE\x10\xa9F:\x03\xc0>\v\"#\n" +
	"\x04Pong\x12\x16\n" +
	"\x06serial\x18\x01 \x01(\x05R\x06serial:\x03\xc0>\b*+\n" +
	"\n" +
	"ServerType\x12\b\n" +
	"\x04NONE\x10\x00\x12\v\n" +
	"\aPHANTOM\x10\x01\x12\x06\n" +
	"\x02AU\x10\x0227\n" +
	"\x06Linker\x12-\n" +
	"\x05Serve\x12\x0f.proto.Envelope\x1a\x0f.proto.Envelope(\x010\x01B;\xca>\fswitcher/msg\xd2>#switcher/msg/linker_msg_registry.goZ\x04./pbb\x06proto3"

var (
	file_linker_proto_rawDescOnce sync.Once
	file_linker_proto_rawDescData []byte
)

func file_linker_proto_rawDescGZIP() []byte {
	file_linker_proto_rawDescOnce.Do(func() {
		file_linker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_linker_proto_rawDesc), len(file_linker_proto_rawDesc)))
	})
	return file_linker_proto_rawDescData
}

var file_linker_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_linker_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_linker_proto_goTypes = []any{
	(ServerType)(0),        // 0: proto.ServerType
	(SessionError_Code)(0), // 1: proto.CloseBySessionError.Code
	(ServerError_Code)(0),  // 2: proto.ServerError.Code
	(*MsgBox)(nil),         // 3: proto.MsgBox
	(*Ping)(nil),           // 4: proto.Ping
	(*SessionError)(nil),   // 5: proto.CloseBySessionError
	(*ServerError)(nil),    // 6: proto.ServerError
	(*Pong)(nil),           // 7: proto.Pong
	(*Envelope)(nil),       // 8: proto.Envelope
}
var file_linker_proto_depIdxs = []int32{
	8, // 0: proto.Linker.Serve:input_type -> proto.Envelope
	8, // 1: proto.Linker.Serve:output_type -> proto.Envelope
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_linker_proto_init() }
func file_linker_proto_init() {
	if File_linker_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_linker_proto_rawDesc), len(file_linker_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_linker_proto_goTypes,
		DependencyIndexes: file_linker_proto_depIdxs,
		EnumInfos:         file_linker_proto_enumTypes,
		MessageInfos:      file_linker_proto_msgTypes,
	}.Build()
	File_linker_proto = out.File
	file_linker_proto_goTypes = nil
	file_linker_proto_depIdxs = nil
}
