// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: linker.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Serial        int32                  `protobuf:"varint,1,opt,name=serial,proto3" json:"serial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_linker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_linker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{0}
}

func (x *Ping) GetSerial() int32 {
	if x != nil {
		return x.Serial
	}
	return 0
}

type Pong struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Serial        int32                  `protobuf:"varint,1,opt,name=serial,proto3" json:"serial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pong) Reset() {
	*x = Pong{}
	mi := &file_linker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_linker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_linker_proto_rawDescGZIP(), []int{1}
}

func (x *Pong) GetSerial() int32 {
	if x != nil {
		return x.Serial
	}
	return 0
}

var File_linker_proto protoreflect.FileDescriptor

const file_linker_proto_rawDesc = "" +
	"\n" +
	"\flinker.proto\x12\x05proto\x1a\fcommon.proto\"%\n" +
	"\x04Ping\x12\x16\n" +
	"\x06serial\x18\x01 \x01(\x05R\x06serial:\x05\xf8\xa3\xe8\x03\x04\"%\n" +
	"\x04Pong\x12\x16\n" +
	"\x06serial\x18\x01 \x01(\x05R\x06serial:\x05\xf8\xa3\xe8\x03\b27\n" +
	"\x06Linker\x12-\n" +
	"\x05Serve\x12\x0f.proto.Envelope\x1a\x0f.proto.Envelope(\x010\x01B\x06Z\x04./pbb\x06proto3"

var (
	file_linker_proto_rawDescOnce sync.Once
	file_linker_proto_rawDescData []byte
)

func file_linker_proto_rawDescGZIP() []byte {
	file_linker_proto_rawDescOnce.Do(func() {
		file_linker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_linker_proto_rawDesc), len(file_linker_proto_rawDesc)))
	})
	return file_linker_proto_rawDescData
}

var file_linker_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_linker_proto_goTypes = []any{
	(*Ping)(nil),     // 0: proto.Ping
	(*Pong)(nil),     // 1: proto.Pong
	(*Envelope)(nil), // 2: proto.Envelope
}
var file_linker_proto_depIdxs = []int32{
	2, // 0: proto.Linker.Serve:input_type -> proto.Envelope
	2, // 1: proto.Linker.Serve:output_type -> proto.Envelope
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_linker_proto_init() }
func file_linker_proto_init() {
	if File_linker_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_linker_proto_rawDesc), len(file_linker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_linker_proto_goTypes,
		DependencyIndexes: file_linker_proto_depIdxs,
		MessageInfos:      file_linker_proto_msgTypes,
	}.Build()
	File_linker_proto = out.File
	file_linker_proto_goTypes = nil
	file_linker_proto_depIdxs = nil
}
